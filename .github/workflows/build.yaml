name: Build and Deploy to Sandbox  
on:   
  push:     
    branches: [ master ]   
  pull_request:     
    branches: [ master ]      

jobs:   
  build:     
    runs-on: ubuntu-latest     
    steps:     
    - name: Checkout this repo       
      uses: actions/checkout@v4     
    
    - name: Cache dependencies       
      uses: actions/cache@v4       
      with:         
        path: ~/.m2/repository         
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}         
        restore-keys: |           
          ${{ runner.os }}-maven-     
    
    - name: Set up JDK 1.8       
      uses: actions/setup-java@v4       
      with:         
        distribution: 'zulu'         
        java-version: 8  
    
    - name: Configure Maven settings with Anypoint credentials
      run: |
        mkdir -p ~/.m2
        echo "<settings>
          <servers>
            <server>
              <id>anypoint-exchange-v3</id>
              <username>${{ secrets.ANYPOINT_PLATFORM_USERNAME }}</username>
              <password>${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}</password>
            </server>
          </servers>
        </settings>" > ~/.m2/settings.xml
    
    - name: Build with Maven
      env:
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        # Eliminar dependencias problemáticas si existen
        rm -rf ~/.m2/repository/com/github/everit-org
        rm -rf ~/.m2/repository/org/everit
        
        # Compilar el proyecto
        mvn -B clean package -Dencryption.key="${ENCRYPTION_KEY}" -Ddecryption.key="${ENCRYPTION_KEY}"
    
    - name: Upload artifact        
      uses: actions/upload-artifact@v4       
      with:           
        name: artifacts           
        path: target/*.jar            

  deploy:     
    needs: build     
    runs-on: ubuntu-latest     
    steps:         
    - name: Checkout this repo       
      uses: actions/checkout@v4     
    
    - name: Set up JDK 1.8       
      uses: actions/setup-java@v4       
      with:         
        distribution: 'zulu'         
        java-version: 8
    
    - name: Cache dependencies       
      uses: actions/cache@v4       
      with:         
        path: ~/.m2/repository         
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}         
        restore-keys: |           
          ${{ runner.os }}-maven-     
    
    - name: Download artifacts
      uses: actions/download-artifact@v4       
      with:         
        name: artifacts
        path: target/
    
    - name: Configure Maven settings with Anypoint credentials
      run: |
        mkdir -p ~/.m2
        echo "<settings>
          <servers>
            <server>
              <id>anypoint-exchange-v3</id>
              <username>${{ secrets.ANYPOINT_PLATFORM_USERNAME }}</username>
              <password>${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}</password>
            </server>
          </servers>
        </settings>" > ~/.m2/settings.xml
    
    - name: Deploy to Sandbox
      env:
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        # Obtener el nombre del archivo JAR
        JAR_FILE=$(ls target/*.jar | head -1)
        
        # Desplegar la aplicación usando mule-maven-plugin
        mvn mule:deploy -DmuleDeploy \
          -Dmule.artifact="${JAR_FILE}" \
          -Danypoint.username="${{ secrets.ANYPOINT_PLATFORM_USERNAME }}" \
          -Danypoint.password="${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}" \
          -Dapp.runtime=4.9.3 \
          -Dencryption.key="${ENCRYPTION_KEY}" \
          -Ddecryption.key="${ENCRYPTION_KEY}" \
          -DskipTests \
          -DskipDeploymentVerification=true